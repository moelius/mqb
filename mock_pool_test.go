// Code generated by MockGen. DO NOT EDIT.
// Source: pool.go

// Package mqb is a generated GoMock package.
package mqb

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockpoolInterface is a mock of poolInterface interface
type MockpoolInterface struct {
	ctrl     *gomock.Controller
	recorder *MockpoolInterfaceMockRecorder
}

// MockpoolInterfaceMockRecorder is the mock recorder for MockpoolInterface
type MockpoolInterfaceMockRecorder struct {
	mock *MockpoolInterface
}

// NewMockpoolInterface creates a new mock instance
func NewMockpoolInterface(ctrl *gomock.Controller) *MockpoolInterface {
	mock := &MockpoolInterface{ctrl: ctrl}
	mock.recorder = &MockpoolInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockpoolInterface) EXPECT() *MockpoolInterfaceMockRecorder {
	return m.recorder
}

// start mocks base method
func (m *MockpoolInterface) start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "start")
	ret0, _ := ret[0].(error)
	return ret0
}

// start indicates an expected call of start
func (mr *MockpoolInterfaceMockRecorder) start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "start", reflect.TypeOf((*MockpoolInterface)(nil).start))
}

// stop mocks base method
func (m *MockpoolInterface) stop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "stop")
}

// stop indicates an expected call of stop
func (mr *MockpoolInterfaceMockRecorder) stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "stop", reflect.TypeOf((*MockpoolInterface)(nil).stop))
}

// setRequestChan mocks base method
func (m *MockpoolInterface) setRequestChan(arg0 chan interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "setRequestChan", arg0)
}

// setRequestChan indicates an expected call of setRequestChan
func (mr *MockpoolInterfaceMockRecorder) setRequestChan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "setRequestChan", reflect.TypeOf((*MockpoolInterface)(nil).setRequestChan), arg0)
}

// getRequestChan mocks base method
func (m *MockpoolInterface) getRequestChan() chan interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getRequestChan")
	ret0, _ := ret[0].(chan interface{})
	return ret0
}

// getRequestChan indicates an expected call of getRequestChan
func (mr *MockpoolInterfaceMockRecorder) getRequestChan() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getRequestChan", reflect.TypeOf((*MockpoolInterface)(nil).getRequestChan))
}
